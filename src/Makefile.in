# Makefile.in generated by automake 1.9.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.17 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SOURCES = SpillSplash.cpp SpillDie.cpp SpillConfig.cpp SpillBoard.cpp SpillAI.cpp main.cpp SpillDictionary.cpp cygwin_moc_types.cpp

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = spillwords$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/aspell.m4 $(top_srcdir)/m4/cygwin.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_spillwords_OBJECTS = spillwords-SpillSplash.$(OBJEXT) \
	spillwords-SpillDie.$(OBJEXT) spillwords-SpillConfig.$(OBJEXT) \
	spillwords-SpillBoard.$(OBJEXT) spillwords-SpillAI.$(OBJEXT) \
	spillwords-main.$(OBJEXT) spillwords-SpillDictionary.$(OBJEXT) \
	spillwords-cygwin_moc_types.$(OBJEXT)
#>- spillwords_OBJECTS = $(am_spillwords_OBJECTS)
#>+ 9
spillwords_final_OBJECTS = spillwords.all_cpp.o 
spillwords_nofinal_OBJECTS = spillwords-SpillSplash.$(OBJEXT) \
	spillwords-SpillDie.$(OBJEXT) spillwords-SpillConfig.$(OBJEXT) \
	spillwords-SpillBoard.$(OBJEXT) spillwords-SpillAI.$(OBJEXT) \
	spillwords-main.$(OBJEXT) spillwords-SpillDictionary.$(OBJEXT) \
	spillwords-cygwin_moc_types.$(OBJEXT) spellcheckform.$(OBJEXT) aboutform.$(OBJEXT) netform.$(OBJEXT) messageform.$(OBJEXT) mainform.$(OBJEXT) spellform.$(OBJEXT) optionsform.$(OBJEXT) scoresform.$(OBJEXT) playersform.$(OBJEXT)\
SpillBoard.moc.o SpillDie.moc.o 
@KDE_USE_FINAL_FALSE@spillwords_OBJECTS = $(spillwords_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@spillwords_OBJECTS = $(spillwords_final_OBJECTS)
am__DEPENDENCIES_1 =
spillwords_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(spillwords_SOURCES)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ASPELL = @ASPELL@
ASPELL_CFLAGS = @ASPELL_CFLAGS@
ASPELL_LIBS = @ASPELL_LIBS@
ASPELL_PATH = @ASPELL_PATH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
CYGWIN_LDFLAGS = @CYGWIN_LDFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
LDFLAGS = @LDFLAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_qtver = @kde_qtver@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
#>- spillwords_SOURCES = spellcheckform.ui aboutform.ui netform.ui messageform.ui mainform.ui spellform.ui optionsform.ui scoresform.ui SpillSplash.cpp SpillDie.cpp SpillConfig.cpp SpillBoard.cpp SpillAI.cpp playersform.ui main.cpp SpillDictionary.cpp cygwin_moc_types.cpp
#>+ 1
spillwords_SOURCES=        SpillSplash.cpp SpillDie.cpp SpillConfig.cpp SpillBoard.cpp SpillAI.cpp  main.cpp SpillDictionary.cpp cygwin_moc_types.cpp spellcheckform.cpp aboutform.cpp netform.cpp messageform.cpp mainform.cpp spellform.cpp optionsform.cpp scoresform.cpp playersform.cpp
SOURCES = SpillSplash.cpp SpillDie.cpp SpillConfig.cpp SpillBoard.cpp SpillAI.cpp main.cpp SpillDictionary.cpp cygwin_moc_types.cpp
INTERFACES = spellcheckform.ui aboutform.ui netform.ui messageform.ui mainform.ui spellform.ui optionsform.ui scoresform.ui playersform.ui 
TRANSLATIONS = 
KDE_OPTIONS = qtonly
spillwords_LDADD = $(LIB_QPE) $(LIB_QT) $(LIBSOCKET) $(QT_LDADD) $(LIB_X11) $(ASPELL_LIBS)
#>- spillwords_CXXFLAGS = $(CXXFLAGS) $(QT_CXXFLAGS)
#>+ 1
spillwords_CXXFLAGS = $(CXXFLAGS) $(KDE_CXXFLAGS) $(QT_CXXFLAGS)
AM_CPPFLAGS = $(QT_INCLUDES) 
EXTRA_DIST = images/spillwords.xpm images/splash.xpm images/net.xpm images/wood.xpm optionsform.ui.h playersform.ui.h scoresform.ui.h spellform.ui.h mainform.ui.h messageform.ui.h netform.ui.h spellcheckform.ui.h dict.dct click.wav SpillDictionary.h

####### kdevelop will overwrite this part!!! (end)############

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)
#>- spillwords_METASOURCES = AUTO

# the library search path. 
spillwords_LDFLAGS = $(all_libraries) $(QT_LDFLAGS) $(X_LDFLAGS) $(CYGWIN_LDFLAGS)

# them while "make clean", use CLEANFILES
DISTCLEANFILES = $(spillwords_METASOURCES)
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
spillwords$(EXEEXT): $(spillwords_OBJECTS) $(spillwords_DEPENDENCIES) 
	@rm -f spillwords$(EXEEXT)
	$(CXXLINK) $(spillwords_LDFLAGS) $(spillwords_OBJECTS) $(spillwords_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-SpillAI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-SpillBoard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-SpillConfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-SpillDictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-SpillDie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-SpillSplash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-cygwin_moc_types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spillwords-main.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

spillwords-SpillSplash.o: SpillSplash.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillSplash.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillSplash.Tpo" -c -o spillwords-SpillSplash.o `test -f 'SpillSplash.cpp' || echo '$(srcdir)/'`SpillSplash.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillSplash.Tpo" "$(DEPDIR)/spillwords-SpillSplash.Po"; else rm -f "$(DEPDIR)/spillwords-SpillSplash.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillSplash.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillSplash.Tpo" -c -o spillwords-SpillSplash.o `test -f 'SpillSplash.cpp' || echo '$(srcdir)/'`SpillSplash.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillSplash.Tpo" "$(DEPDIR)/spillwords-SpillSplash.Po"; else rm -f "$(DEPDIR)/spillwords-SpillSplash.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillSplash.cpp' object='spillwords-SpillSplash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillSplash.o `test -f 'SpillSplash.cpp' || echo '$(srcdir)/'`SpillSplash.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillSplash.o `test -f 'SpillSplash.cpp' || echo '$(srcdir)/'`SpillSplash.cpp

spillwords-SpillSplash.obj: SpillSplash.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillSplash.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillSplash.Tpo" -c -o spillwords-SpillSplash.obj `if test -f 'SpillSplash.cpp'; then $(CYGPATH_W) 'SpillSplash.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillSplash.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillSplash.Tpo" "$(DEPDIR)/spillwords-SpillSplash.Po"; else rm -f "$(DEPDIR)/spillwords-SpillSplash.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillSplash.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillSplash.Tpo" -c -o spillwords-SpillSplash.obj `if test -f 'SpillSplash.cpp'; then $(CYGPATH_W) 'SpillSplash.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillSplash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillSplash.Tpo" "$(DEPDIR)/spillwords-SpillSplash.Po"; else rm -f "$(DEPDIR)/spillwords-SpillSplash.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillSplash.cpp' object='spillwords-SpillSplash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillSplash.obj `if test -f 'SpillSplash.cpp'; then $(CYGPATH_W) 'SpillSplash.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillSplash.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillSplash.obj `if test -f 'SpillSplash.cpp'; then $(CYGPATH_W) 'SpillSplash.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillSplash.cpp'; fi`

spillwords-SpillDie.o: SpillDie.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillDie.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillDie.Tpo" -c -o spillwords-SpillDie.o `test -f 'SpillDie.cpp' || echo '$(srcdir)/'`SpillDie.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDie.Tpo" "$(DEPDIR)/spillwords-SpillDie.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDie.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillDie.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillDie.Tpo" -c -o spillwords-SpillDie.o `test -f 'SpillDie.cpp' || echo '$(srcdir)/'`SpillDie.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDie.Tpo" "$(DEPDIR)/spillwords-SpillDie.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDie.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillDie.cpp' object='spillwords-SpillDie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillDie.o `test -f 'SpillDie.cpp' || echo '$(srcdir)/'`SpillDie.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillDie.o `test -f 'SpillDie.cpp' || echo '$(srcdir)/'`SpillDie.cpp

spillwords-SpillDie.obj: SpillDie.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillDie.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillDie.Tpo" -c -o spillwords-SpillDie.obj `if test -f 'SpillDie.cpp'; then $(CYGPATH_W) 'SpillDie.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDie.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDie.Tpo" "$(DEPDIR)/spillwords-SpillDie.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDie.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillDie.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillDie.Tpo" -c -o spillwords-SpillDie.obj `if test -f 'SpillDie.cpp'; then $(CYGPATH_W) 'SpillDie.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDie.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDie.Tpo" "$(DEPDIR)/spillwords-SpillDie.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDie.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillDie.cpp' object='spillwords-SpillDie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillDie.obj `if test -f 'SpillDie.cpp'; then $(CYGPATH_W) 'SpillDie.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDie.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillDie.obj `if test -f 'SpillDie.cpp'; then $(CYGPATH_W) 'SpillDie.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDie.cpp'; fi`

spillwords-SpillConfig.o: SpillConfig.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillConfig.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillConfig.Tpo" -c -o spillwords-SpillConfig.o `test -f 'SpillConfig.cpp' || echo '$(srcdir)/'`SpillConfig.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillConfig.Tpo" "$(DEPDIR)/spillwords-SpillConfig.Po"; else rm -f "$(DEPDIR)/spillwords-SpillConfig.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillConfig.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillConfig.Tpo" -c -o spillwords-SpillConfig.o `test -f 'SpillConfig.cpp' || echo '$(srcdir)/'`SpillConfig.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillConfig.Tpo" "$(DEPDIR)/spillwords-SpillConfig.Po"; else rm -f "$(DEPDIR)/spillwords-SpillConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillConfig.cpp' object='spillwords-SpillConfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillConfig.o `test -f 'SpillConfig.cpp' || echo '$(srcdir)/'`SpillConfig.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillConfig.o `test -f 'SpillConfig.cpp' || echo '$(srcdir)/'`SpillConfig.cpp

spillwords-SpillConfig.obj: SpillConfig.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillConfig.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillConfig.Tpo" -c -o spillwords-SpillConfig.obj `if test -f 'SpillConfig.cpp'; then $(CYGPATH_W) 'SpillConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillConfig.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillConfig.Tpo" "$(DEPDIR)/spillwords-SpillConfig.Po"; else rm -f "$(DEPDIR)/spillwords-SpillConfig.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillConfig.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillConfig.Tpo" -c -o spillwords-SpillConfig.obj `if test -f 'SpillConfig.cpp'; then $(CYGPATH_W) 'SpillConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillConfig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillConfig.Tpo" "$(DEPDIR)/spillwords-SpillConfig.Po"; else rm -f "$(DEPDIR)/spillwords-SpillConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillConfig.cpp' object='spillwords-SpillConfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillConfig.obj `if test -f 'SpillConfig.cpp'; then $(CYGPATH_W) 'SpillConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillConfig.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillConfig.obj `if test -f 'SpillConfig.cpp'; then $(CYGPATH_W) 'SpillConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillConfig.cpp'; fi`

spillwords-SpillBoard.o: SpillBoard.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillBoard.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillBoard.Tpo" -c -o spillwords-SpillBoard.o `test -f 'SpillBoard.cpp' || echo '$(srcdir)/'`SpillBoard.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillBoard.Tpo" "$(DEPDIR)/spillwords-SpillBoard.Po"; else rm -f "$(DEPDIR)/spillwords-SpillBoard.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillBoard.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillBoard.Tpo" -c -o spillwords-SpillBoard.o `test -f 'SpillBoard.cpp' || echo '$(srcdir)/'`SpillBoard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillBoard.Tpo" "$(DEPDIR)/spillwords-SpillBoard.Po"; else rm -f "$(DEPDIR)/spillwords-SpillBoard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillBoard.cpp' object='spillwords-SpillBoard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillBoard.o `test -f 'SpillBoard.cpp' || echo '$(srcdir)/'`SpillBoard.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillBoard.o `test -f 'SpillBoard.cpp' || echo '$(srcdir)/'`SpillBoard.cpp

spillwords-SpillBoard.obj: SpillBoard.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillBoard.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillBoard.Tpo" -c -o spillwords-SpillBoard.obj `if test -f 'SpillBoard.cpp'; then $(CYGPATH_W) 'SpillBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillBoard.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillBoard.Tpo" "$(DEPDIR)/spillwords-SpillBoard.Po"; else rm -f "$(DEPDIR)/spillwords-SpillBoard.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillBoard.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillBoard.Tpo" -c -o spillwords-SpillBoard.obj `if test -f 'SpillBoard.cpp'; then $(CYGPATH_W) 'SpillBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillBoard.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillBoard.Tpo" "$(DEPDIR)/spillwords-SpillBoard.Po"; else rm -f "$(DEPDIR)/spillwords-SpillBoard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillBoard.cpp' object='spillwords-SpillBoard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillBoard.obj `if test -f 'SpillBoard.cpp'; then $(CYGPATH_W) 'SpillBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillBoard.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillBoard.obj `if test -f 'SpillBoard.cpp'; then $(CYGPATH_W) 'SpillBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillBoard.cpp'; fi`

spillwords-SpillAI.o: SpillAI.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillAI.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillAI.Tpo" -c -o spillwords-SpillAI.o `test -f 'SpillAI.cpp' || echo '$(srcdir)/'`SpillAI.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillAI.Tpo" "$(DEPDIR)/spillwords-SpillAI.Po"; else rm -f "$(DEPDIR)/spillwords-SpillAI.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillAI.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillAI.Tpo" -c -o spillwords-SpillAI.o `test -f 'SpillAI.cpp' || echo '$(srcdir)/'`SpillAI.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillAI.Tpo" "$(DEPDIR)/spillwords-SpillAI.Po"; else rm -f "$(DEPDIR)/spillwords-SpillAI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillAI.cpp' object='spillwords-SpillAI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillAI.o `test -f 'SpillAI.cpp' || echo '$(srcdir)/'`SpillAI.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillAI.o `test -f 'SpillAI.cpp' || echo '$(srcdir)/'`SpillAI.cpp

spillwords-SpillAI.obj: SpillAI.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillAI.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillAI.Tpo" -c -o spillwords-SpillAI.obj `if test -f 'SpillAI.cpp'; then $(CYGPATH_W) 'SpillAI.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillAI.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillAI.Tpo" "$(DEPDIR)/spillwords-SpillAI.Po"; else rm -f "$(DEPDIR)/spillwords-SpillAI.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillAI.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillAI.Tpo" -c -o spillwords-SpillAI.obj `if test -f 'SpillAI.cpp'; then $(CYGPATH_W) 'SpillAI.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillAI.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillAI.Tpo" "$(DEPDIR)/spillwords-SpillAI.Po"; else rm -f "$(DEPDIR)/spillwords-SpillAI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillAI.cpp' object='spillwords-SpillAI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillAI.obj `if test -f 'SpillAI.cpp'; then $(CYGPATH_W) 'SpillAI.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillAI.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillAI.obj `if test -f 'SpillAI.cpp'; then $(CYGPATH_W) 'SpillAI.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillAI.cpp'; fi`

spillwords-main.o: main.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-main.o -MD -MP -MF "$(DEPDIR)/spillwords-main.Tpo" -c -o spillwords-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-main.Tpo" "$(DEPDIR)/spillwords-main.Po"; else rm -f "$(DEPDIR)/spillwords-main.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-main.o -MD -MP -MF "$(DEPDIR)/spillwords-main.Tpo" -c -o spillwords-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-main.Tpo" "$(DEPDIR)/spillwords-main.Po"; else rm -f "$(DEPDIR)/spillwords-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='spillwords-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

spillwords-main.obj: main.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-main.obj -MD -MP -MF "$(DEPDIR)/spillwords-main.Tpo" -c -o spillwords-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-main.Tpo" "$(DEPDIR)/spillwords-main.Po"; else rm -f "$(DEPDIR)/spillwords-main.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-main.obj -MD -MP -MF "$(DEPDIR)/spillwords-main.Tpo" -c -o spillwords-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-main.Tpo" "$(DEPDIR)/spillwords-main.Po"; else rm -f "$(DEPDIR)/spillwords-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='spillwords-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

spillwords-SpillDictionary.o: SpillDictionary.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillDictionary.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillDictionary.Tpo" -c -o spillwords-SpillDictionary.o `test -f 'SpillDictionary.cpp' || echo '$(srcdir)/'`SpillDictionary.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo" "$(DEPDIR)/spillwords-SpillDictionary.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillDictionary.o -MD -MP -MF "$(DEPDIR)/spillwords-SpillDictionary.Tpo" -c -o spillwords-SpillDictionary.o `test -f 'SpillDictionary.cpp' || echo '$(srcdir)/'`SpillDictionary.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo" "$(DEPDIR)/spillwords-SpillDictionary.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillDictionary.cpp' object='spillwords-SpillDictionary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillDictionary.o `test -f 'SpillDictionary.cpp' || echo '$(srcdir)/'`SpillDictionary.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillDictionary.o `test -f 'SpillDictionary.cpp' || echo '$(srcdir)/'`SpillDictionary.cpp

spillwords-SpillDictionary.obj: SpillDictionary.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-SpillDictionary.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillDictionary.Tpo" -c -o spillwords-SpillDictionary.obj `if test -f 'SpillDictionary.cpp'; then $(CYGPATH_W) 'SpillDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDictionary.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo" "$(DEPDIR)/spillwords-SpillDictionary.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-SpillDictionary.obj -MD -MP -MF "$(DEPDIR)/spillwords-SpillDictionary.Tpo" -c -o spillwords-SpillDictionary.obj `if test -f 'SpillDictionary.cpp'; then $(CYGPATH_W) 'SpillDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDictionary.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo" "$(DEPDIR)/spillwords-SpillDictionary.Po"; else rm -f "$(DEPDIR)/spillwords-SpillDictionary.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpillDictionary.cpp' object='spillwords-SpillDictionary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-SpillDictionary.obj `if test -f 'SpillDictionary.cpp'; then $(CYGPATH_W) 'SpillDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDictionary.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-SpillDictionary.obj `if test -f 'SpillDictionary.cpp'; then $(CYGPATH_W) 'SpillDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/SpillDictionary.cpp'; fi`

spillwords-cygwin_moc_types.o: cygwin_moc_types.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-cygwin_moc_types.o -MD -MP -MF "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" -c -o spillwords-cygwin_moc_types.o `test -f 'cygwin_moc_types.cpp' || echo '$(srcdir)/'`cygwin_moc_types.cpp; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" "$(DEPDIR)/spillwords-cygwin_moc_types.Po"; else rm -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-cygwin_moc_types.o -MD -MP -MF "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" -c -o spillwords-cygwin_moc_types.o `test -f 'cygwin_moc_types.cpp' || echo '$(srcdir)/'`cygwin_moc_types.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" "$(DEPDIR)/spillwords-cygwin_moc_types.Po"; else rm -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cygwin_moc_types.cpp' object='spillwords-cygwin_moc_types.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-cygwin_moc_types.o `test -f 'cygwin_moc_types.cpp' || echo '$(srcdir)/'`cygwin_moc_types.cpp
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-cygwin_moc_types.o `test -f 'cygwin_moc_types.cpp' || echo '$(srcdir)/'`cygwin_moc_types.cpp

spillwords-cygwin_moc_types.obj: cygwin_moc_types.cpp
#>- @am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -MT spillwords-cygwin_moc_types.obj -MD -MP -MF "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" -c -o spillwords-cygwin_moc_types.obj `if test -f 'cygwin_moc_types.cpp'; then $(CYGPATH_W) 'cygwin_moc_types.cpp'; else $(CYGPATH_W) '$(srcdir)/cygwin_moc_types.cpp'; fi`; \
#>- @am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" "$(DEPDIR)/spillwords-cygwin_moc_types.Po"; else rm -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo"; exit 1; fi
#>+ 2
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT spillwords-cygwin_moc_types.obj -MD -MP -MF "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" -c -o spillwords-cygwin_moc_types.obj `if test -f 'cygwin_moc_types.cpp'; then $(CYGPATH_W) 'cygwin_moc_types.cpp'; else $(CYGPATH_W) '$(srcdir)/cygwin_moc_types.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo" "$(DEPDIR)/spillwords-cygwin_moc_types.Po"; else rm -f "$(DEPDIR)/spillwords-cygwin_moc_types.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cygwin_moc_types.cpp' object='spillwords-cygwin_moc_types.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
#>- @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) -c -o spillwords-cygwin_moc_types.obj `if test -f 'cygwin_moc_types.cpp'; then $(CYGPATH_W) 'cygwin_moc_types.cpp'; else $(CYGPATH_W) '$(srcdir)/cygwin_moc_types.cpp'; fi`
#>+ 1
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spillwords_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o spillwords-cygwin_moc_types.obj `if test -f 'cygwin_moc_types.cpp'; then $(CYGPATH_W) 'cygwin_moc_types.cpp'; else $(CYGPATH_W) '$(srcdir)/cygwin_moc_types.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/images
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
SpillBoard.moc.cpp: $(srcdir)/SpillBoard.h
	$(MOC) $(srcdir)/SpillBoard.h -o SpillBoard.moc.cpp

#>+ 2
mocs: SpillBoard.moc.cpp

#>+ 3
SpillDie.moc.cpp: $(srcdir)/SpillDie.h
	$(MOC) $(srcdir)/SpillDie.h -o SpillDie.moc.cpp

#>+ 2
mocs: SpillDie.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  SpillBoard.moc.cpp SpillDie.moc.cpp

#>+ 2
KDE_DIST=playersform.ui mainform.ui messageform.ui SpillConfig.h netform.ui SpillSplash.h Spillwords.h SpillBoard.h spillwords.pro aboutform.ui Makefile.in spellcheckform.ui SpillAI.h spellform.ui optionsform.ui scoresform.ui aboutform.ui.h Makefile.am SpillDie.h 

#>+ 12
clean-ui:
	-rm -f \
	spellcheckform.cpp spellcheckform.h spellcheckform.moc \
	aboutform.cpp aboutform.h aboutform.moc \
	netform.cpp netform.h netform.moc \
	messageform.cpp messageform.h messageform.moc \
	mainform.cpp mainform.h mainform.moc \
	spellform.cpp spellform.h spellform.moc \
	optionsform.cpp optionsform.h optionsform.moc \
	scoresform.cpp scoresform.h scoresform.moc \
	playersform.cpp playersform.h playersform.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
spillwords.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/SpillSplash.cpp $(srcdir)/SpillDie.cpp $(srcdir)/SpillConfig.cpp $(srcdir)/SpillBoard.cpp $(srcdir)/SpillAI.cpp $(srcdir)/main.cpp $(srcdir)/SpillDictionary.cpp $(srcdir)/cygwin_moc_types.cpp spellcheckform.cpp aboutform.cpp netform.cpp messageform.cpp mainform.cpp spellform.cpp optionsform.cpp scoresform.cpp playersform.cpp SpillBoard.moc.cpp SpillDie.moc.cpp  netform.moc spellcheckform.moc messageform.moc playersform.moc mainform.moc optionsform.moc aboutform.moc spellform.moc scoresform.moc
	@echo 'creating spillwords.all_cpp.cpp ...'; \
	rm -f spillwords.all_cpp.files spillwords.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> spillwords.all_cpp.final; \
	for file in SpillSplash.cpp SpillDie.cpp SpillConfig.cpp SpillBoard.cpp SpillAI.cpp main.cpp SpillDictionary.cpp cygwin_moc_types.cpp spellcheckform.cpp aboutform.cpp netform.cpp messageform.cpp mainform.cpp spellform.cpp optionsform.cpp scoresform.cpp playersform.cpp SpillBoard.moc.cpp SpillDie.moc.cpp ; do \
	  echo "#include \"$$file\"" >> spillwords.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> spillwords.all_cpp.final; \
	done; \
	cat spillwords.all_cpp.final spillwords.all_cpp.files > spillwords.all_cpp.cpp; \
	rm -f spillwords.all_cpp.final spillwords.all_cpp.files

#>+ 3
clean-final:
	-rm -f spillwords.all_cpp.cpp

#>+ 3
final:
	$(MAKE) spillwords_OBJECTS="$(spillwords_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) spillwords_OBJECTS="$(spillwords_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) spillwords_OBJECTS="$(spillwords_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) spillwords_OBJECTS="$(spillwords_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 11
nmcheck: 
$(srcdir)/SpillConfig.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
$(srcdir)/SpillDie.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
nmcheck-am: nmcheck
$(srcdir)/SpillDictionary.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
$(srcdir)/SpillBoard.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
$(srcdir)/main.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
$(srcdir)/SpillAI.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
$(srcdir)/SpillSplash.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 
$(srcdir)/cygwin_moc_types.cpp: spellcheckform.h aboutform.h netform.h messageform.h mainform.h spellform.h optionsform.h scoresform.h playersform.h 

#>+ 99
mainform.cpp: $(srcdir)/mainform.ui mainform.h mainform.moc
	rm -f mainform.cpp
	$(UIC) -i mainform.h $(srcdir)/mainform.ui > mainform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "mainform.moc"' >> mainform.cpp; else rm -f mainform.cpp ; exit $$ret ; fi

mainform.h: $(srcdir)/mainform.ui
	$(UIC) -o mainform.h $(srcdir)/mainform.ui

mainform.moc: mainform.h
	$(MOC) mainform.h -o mainform.moc

messageform.cpp: $(srcdir)/messageform.ui messageform.h messageform.moc
	rm -f messageform.cpp
	$(UIC) -i messageform.h $(srcdir)/messageform.ui > messageform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "messageform.moc"' >> messageform.cpp; else rm -f messageform.cpp ; exit $$ret ; fi

messageform.h: $(srcdir)/messageform.ui
	$(UIC) -o messageform.h $(srcdir)/messageform.ui

messageform.moc: messageform.h
	$(MOC) messageform.h -o messageform.moc

playersform.cpp: $(srcdir)/playersform.ui playersform.h playersform.moc
	rm -f playersform.cpp
	$(UIC) -i playersform.h $(srcdir)/playersform.ui > playersform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "playersform.moc"' >> playersform.cpp; else rm -f playersform.cpp ; exit $$ret ; fi

playersform.h: $(srcdir)/playersform.ui
	$(UIC) -o playersform.h $(srcdir)/playersform.ui

playersform.moc: playersform.h
	$(MOC) playersform.h -o playersform.moc

scoresform.cpp: $(srcdir)/scoresform.ui scoresform.h scoresform.moc
	rm -f scoresform.cpp
	$(UIC) -i scoresform.h $(srcdir)/scoresform.ui > scoresform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "scoresform.moc"' >> scoresform.cpp; else rm -f scoresform.cpp ; exit $$ret ; fi

scoresform.h: $(srcdir)/scoresform.ui
	$(UIC) -o scoresform.h $(srcdir)/scoresform.ui

scoresform.moc: scoresform.h
	$(MOC) scoresform.h -o scoresform.moc

spellcheckform.cpp: $(srcdir)/spellcheckform.ui spellcheckform.h spellcheckform.moc
	rm -f spellcheckform.cpp
	$(UIC) -i spellcheckform.h $(srcdir)/spellcheckform.ui > spellcheckform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "spellcheckform.moc"' >> spellcheckform.cpp; else rm -f spellcheckform.cpp ; exit $$ret ; fi

spellcheckform.h: $(srcdir)/spellcheckform.ui
	$(UIC) -o spellcheckform.h $(srcdir)/spellcheckform.ui

spellcheckform.moc: spellcheckform.h
	$(MOC) spellcheckform.h -o spellcheckform.moc

aboutform.cpp: $(srcdir)/aboutform.ui aboutform.h aboutform.moc
	rm -f aboutform.cpp
	$(UIC) -i aboutform.h $(srcdir)/aboutform.ui > aboutform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "aboutform.moc"' >> aboutform.cpp; else rm -f aboutform.cpp ; exit $$ret ; fi

aboutform.h: $(srcdir)/aboutform.ui
	$(UIC) -o aboutform.h $(srcdir)/aboutform.ui

aboutform.moc: aboutform.h
	$(MOC) aboutform.h -o aboutform.moc

netform.cpp: $(srcdir)/netform.ui netform.h netform.moc
	rm -f netform.cpp
	$(UIC) -i netform.h $(srcdir)/netform.ui > netform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "netform.moc"' >> netform.cpp; else rm -f netform.cpp ; exit $$ret ; fi

netform.h: $(srcdir)/netform.ui
	$(UIC) -o netform.h $(srcdir)/netform.ui

netform.moc: netform.h
	$(MOC) netform.h -o netform.moc

optionsform.cpp: $(srcdir)/optionsform.ui optionsform.h optionsform.moc
	rm -f optionsform.cpp
	$(UIC) -i optionsform.h $(srcdir)/optionsform.ui > optionsform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "optionsform.moc"' >> optionsform.cpp; else rm -f optionsform.cpp ; exit $$ret ; fi

optionsform.h: $(srcdir)/optionsform.ui
	$(UIC) -o optionsform.h $(srcdir)/optionsform.ui

optionsform.moc: optionsform.h
	$(MOC) optionsform.h -o optionsform.moc

spellform.cpp: $(srcdir)/spellform.ui spellform.h spellform.moc
	rm -f spellform.cpp
	$(UIC) -i spellform.h $(srcdir)/spellform.ui > spellform.cpp; ret=$$?; \
	if test "$$ret" = 0; then echo '#include "spellform.moc"' >> spellform.cpp; else rm -f spellform.cpp ; exit $$ret ; fi

spellform.h: $(srcdir)/spellform.ui
	$(UIC) -o spellform.h $(srcdir)/spellform.ui

spellform.moc: spellform.h
	$(MOC) spellform.h -o spellform.moc
